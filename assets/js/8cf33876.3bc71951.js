"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[871],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3476:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={id:"get-started",title:"Get Started",sidebar_position:1},i=void 0,l={unversionedId:"docs/bundle/get-started",id:"docs/bundle/get-started",title:"Get Started",description:"Bundle analysis plugin requires node --version >= v12",source:"@site/docs/docs/bundle/get-started.md",sourceDirName:"docs/bundle",slug:"/docs/bundle/get-started",permalink:"/perfsee/docs/docs/bundle/get-started",draft:!1,editUrl:"https://github.com/perfsee/perfsee/tree/main/docs/docs/docs/bundle/get-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"get-started",title:"Get Started",sidebar_position:1},sidebar:"documentsSidebar",previous:{title:"Get Started",permalink:"/perfsee/docs/docs/get-started"},next:{title:"Bundle Report",permalink:"/perfsee/docs/docs/bundle/bundle-report"}},s={},p=[{value:"Step 1\uff1aInstall the plugin",id:"step-1install-the-plugin",level:2},{value:"Step 2\uff1aBuild and Analyze",id:"step-2build-and-analyze",level:2},{value:"Option 1: Uploading to Perfsee",id:"option-1-uploading-to-perfsee",level:3},{value:"Option 2: Analyze locally",id:"option-2-analyze-locally",level:3},{value:"Step 3\uff1aView the report",id:"step-3view-the-report",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Bundle analysis plugin requires ",(0,a.kt)("inlineCode",{parentName:"p"},"node --version >= v12"))),(0,a.kt)("h2",{id:"step-1install-the-plugin"},"Step 1\uff1aInstall the plugin"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# or any other package manager your project uses, like npm/pnpm\nyarn add @perfsee/webpack -D\n\n# or for other bundle tools\nyarn add @perfsee/esbuild -D\nyarn add @perfsee/rollup -D\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="webpack.config.js"',title:'"webpack.config.js"'},"const { PerfseePlugin } = require('@perfsee/webpack')\n\nmodule.exports = {\n  // ...\n  plugins: [\n    // ...\n    new PerfseePlugin({\n      /**\n       * Your project ID on Perfsee platform.\n       *\n       * **Required if you want ot upload the build to Perfsee platform for further analysis.**\n       */\n      project: 'your-project-id',\n\n      /**\n       * Give a uniq name for the bundled artifact.\n       *\n       * This option will be very useful when there are multiple builds in a single commit(in single CI progress)\n       *\n       * Because the comparasion with historical builds is based on `Entrypoint`, and if multiple builds\n       * emit same entrypoint names, we can't detect which entrypoint is the correct one to be compared.\n       *\n       * e.g. `build-1/main` and `build-2/main` are more confusing then `landing/main` and `customers/main`.\n       *\n       * @default 'main'\n       */\n      artifactName: 'main',\n    }),\n    // ...\n  ],\n}\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Other plugin options are well documented in ",(0,a.kt)("a",{parentName:"p",href:"./plugin-options"},"options"))),(0,a.kt)("h2",{id:"step-2build-and-analyze"},"Step 2\uff1aBuild and Analyze"),(0,a.kt)("h3",{id:"option-1-uploading-to-perfsee"},"Option 1: Uploading to Perfsee"),(0,a.kt)("p",null,"By default, after the bundling progress, our plugin will automatically collect the required information and upload it to Perfsee platform. The platform will start the analysis job right after builds are received and return the link to the analyzed result to you."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# provide `PERFSEE_TOKEN` environment variable for uploading builds\nexport PERFSEE_TOKEN=<your token>\n\n# pack\nyarn build\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Checkout ",(0,a.kt)("a",{parentName:"p",href:"../../api"},"API")," for how to generate the token.")),(0,a.kt)("h3",{id:"option-2-analyze-locally"},"Option 2: Analyze locally"),(0,a.kt)("p",null,"If you don't want your built assets to be uploaded to Perfsee, we provide such an option as well."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"We highly recommend uploading builds to Perfsee to analyze."),(0,a.kt)("p",{parentName:"admonition"},"The benefits would be, we will record every detail of your builds, including date, result, log and environment, which are all used to do better analysis. We will also use the historical data as a baseline to be compared with the latest commit, so we could find the potential performance impact in time."),(0,a.kt)("p",{parentName:"admonition"},"Besides, some other features of our platform require the builds data as well. The leaking builds data may cause those features unavailable.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# tells the plugin, do not upload the builds\nexport PERFSEE_NO_UPLOAD=1\n\n# pack\nyarn build\n")),(0,a.kt)("h2",{id:"step-3view-the-report"},"Step 3\uff1aView the report"),(0,a.kt)("p",null,"If in Step 2, you choose to upload the builds to Perfsee, we will return you an URL to the final report, or in the form of a Github PR comment if exists. The bundle report in detail is explained here: ",(0,a.kt)("a",{parentName:"p",href:"./bundle-report"},"Bundle Report"),"."),(0,a.kt)("p",null,"If your choose to analyze locally, the result will only be shown in the CI logs."))}u.isMDXComponent=!0}}]);