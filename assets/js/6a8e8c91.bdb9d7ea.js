"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[321],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var a=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=p(r),u=i,m=h["".concat(l,".").concat(u)]||h[u]||d[u]||n;return r?a.createElement(m,o(o({ref:t},c),{},{components:r})):a.createElement(m,o({ref:t},c))}));function u(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<n;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},692:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>p});var a=r(7462),i=(r(7294),r(3905));const n={sidebar_position:2},o="Snapshot report",s={unversionedId:"docs/lab/report",id:"docs/lab/report",title:"Snapshot report",description:"We call the result of the Lab performance analysis job Snapshot. Every snapshot contains all reports of URL picked with given env & profile. For instance, in a project configured with 5 pages and each page is related to 2 profiles, there will be 10 (5x2) reports for each snapshot.",source:"@site/docs/docs/lab/report.md",sourceDirName:"docs/lab",slug:"/docs/lab/report",permalink:"/perfsee/docs/docs/lab/report",draft:!1,editUrl:"https://github.com/perfsee/perfsee/tree/main/docs/docs/docs/lab/report.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"documentsSidebar",previous:{title:"Get started",permalink:"/perfsee/docs/docs/lab/get-started"},next:{title:"Comparing multiple reports",permalink:"/perfsee/docs/docs/lab/multi-reports"}},l={},p=[{value:"1. Snapshot id or Snapshot title",id:"1-snapshot-id-or-snapshot-title",level:4},{value:"2. Page switcher",id:"2-page-switcher",level:4},{value:"3. Profile switcher",id:"3-profile-switcher",level:4},{value:"4. Environment switcher",id:"4-environment-switcher",level:4},{value:"5. Add this report to the multi-report comparison field",id:"5-add-this-report-to-the-multi-report-comparison-field",level:4},{value:"6. Open the analyzed page in a new tab",id:"6-open-the-analyzed-page-in-a-new-tab",level:4},{value:"Overview",id:"overview",level:2},{value:"Performance metrics:",id:"performance-metrics",level:3},{value:"Rendering process",id:"rendering-process",level:3},{value:"Main Thread Execution Timeline\uff1a",id:"main-thread-execution-timeline",level:3},{value:"Assets",id:"assets",level:2},{value:"1. Filtering requests by key time points",id:"1-filtering-requests-by-key-time-points",level:3},{value:"2. Filtering requests that can be optimized",id:"2-filtering-requests-that-can-be-optimized",level:3},{value:"3. Request detail",id:"3-request-detail",level:3},{value:"Flame chart",id:"flame-chart",level:2},{value:"Treemap",id:"treemap",level:2},{value:"Analysis Report",id:"analysis-report",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"snapshot-report"},"Snapshot report"),(0,i.kt)("p",null,"We call the result of the Lab performance analysis job ",(0,i.kt)("strong",{parentName:"p"},"Snapshot"),". Every snapshot contains all reports of URL picked with given env & profile. For instance, in a project configured with 5 pages and each page is related to 2 profiles, there will be 10 (5x2) reports for each snapshot."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"report",src:r(3955).Z,width:"3302",height:"1670"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Function introduction corresponds to the marker serial number"))),(0,i.kt)("h4",{id:"1-snapshot-id-or-snapshot-title"},"1. Snapshot id or Snapshot title"),(0,i.kt)("h4",{id:"2-page-switcher"},"2. Page switcher"),(0,i.kt)("h4",{id:"3-profile-switcher"},"3. Profile switcher"),(0,i.kt)("h4",{id:"4-environment-switcher"},"4. Environment switcher"),(0,i.kt)("h4",{id:"5-add-this-report-to-the-multi-report-comparison-field"},"5. Add this report to the multi-report comparison field"),(0,i.kt)("h4",{id:"6-open-the-analyzed-page-in-a-new-tab"},"6. Open the analyzed page in a new tab"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Snapshot Overview provides the most speed information:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"critical speed metrics (color-coded based on good, need improvement or poor readings)"),(0,i.kt)("li",{parentName:"ul"},"a pie chart of requested assets"),(0,i.kt)("li",{parentName:"ul"},"a render timeline"),(0,i.kt)("li",{parentName:"ul"},"a render video"),(0,i.kt)("li",{parentName:"ul"},"a JavaScript Main Thread Execution Timeline")),(0,i.kt)("h3",{id:"performance-metrics"},"Performance metrics:"),(0,i.kt)("p",null,"The platform's reports will use different colors to mark the critical metrics, and the correspondence between the score range and the colors is as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"0 ~ 49 (red): Slow"),(0,i.kt)("li",{parentName:"ul"},"50 ~ 89 (orange): Average"),(0,i.kt)("li",{parentName:"ul"},"90 ~ 100 (green): Fast")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"metrics",src:r(2258).Z,width:"2786",height:"1554"})),(0,i.kt)("h3",{id:"rendering-process"},"Rendering process"),(0,i.kt)("p",null,'Click on the "Render Video" button on the right and it will display a video of the rendering process.'),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"timeline",src:r(1053).Z,width:"2820",height:"370"})),(0,i.kt)("h3",{id:"main-thread-execution-timeline"},"Main Thread Execution Timeline\uff1a"),(0,i.kt)("p",null,"With the Main Thread Execution Timeline, it\u2019s possible to pinpoint long-running and blocking JavaScript tasks."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"long task",src:r(258).Z,width:"1586",height:"290"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"long task hover",src:r(4723).Z,width:"2232",height:"392"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Finding long-running tasks before critical time points such as FMP/TTI is an effective means of optimization.")),(0,i.kt)("h2",{id:"assets"},"Assets"),(0,i.kt)("p",null,"The requests can be inspected in great detail to find speed bottlenecks."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"assets",src:r(5856).Z,width:"2868",height:"1578"})),(0,i.kt)("h3",{id:"1-filtering-requests-by-key-time-points"},"1. Filtering requests by key time points"),(0,i.kt)("p",null,"It helps us to quickly find the resource loading situation before the key time point (FCP/FMP/LCP/TTI)."),(0,i.kt)("h3",{id:"2-filtering-requests-that-can-be-optimized"},"2. Filtering requests that can be optimized"),(0,i.kt)("p",null,"Filter out requests that can be further optimized based on rules such as whether Gzip is properly enabled, whether caching is properly enabled, resource volume size, request time, etc."),(0,i.kt)("h3",{id:"3-request-detail"},"3. Request detail"),(0,i.kt)("p",null,"The header of each column of the table can be clicked to toggle the sorting. By default, the table is sorted by startTime.\nEach column in the table represents the same information as in Chrome devtool for the same name.\nThe request information in each row of the table can be expanded by clicking on it, and when expanded you can see the specific Timing/Request headers/Response headers etc. for the request."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"header",src:r(6480).Z,width:"2840",height:"920"})),(0,i.kt)("h2",{id:"flame-chart"},"Flame chart"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The Flame chart feature requires Snapshot to set the commit before it will be displayed. Check: ",(0,i.kt)("a",{parentName:"p",href:"./set-commit"},"how to set commit"),".")),(0,i.kt)("p",null,"The detailed runtime of the browser during Lab runs is visualized as a flame graph. For more information about flame graphs, please refer to ",(0,i.kt)("a",{parentName:"p",href:"../source/flamechart"},"How to use flame chart"),"."),(0,i.kt)("p",null,"The flame chart contains three parts of information:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Network: Network request"),(0,i.kt)("li",{parentName:"ul"},"Tasks: Information about the execution of the browser's own tasks, such as calculating styles, rendering, etc."),(0,i.kt)("li",{parentName:"ul"},"Main: JavaScript main thread execution information.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"flamechart",src:r(4261).Z,width:"2416",height:"1056"})),(0,i.kt)("h2",{id:"treemap"},"Treemap"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The Treemap feature requires Snapshot to set the commit before it will be displayed too. Check: ",(0,i.kt)("a",{parentName:"p",href:"./set-commit"},"how to set commit"),".")),(0,i.kt)("p",null,"The visualization shows the JavaScript coverage on the page during runtime. The red shaded parts of the graph are the JavaScript that was downloaded but not run."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"treemap",src:r(7506).Z,width:"2390",height:"1294"})),(0,i.kt)("h2",{id:"analysis-report"},"Analysis Report"),(0,i.kt)("p",null,"Performance, SEO, Best Practices, Accessibility and PWA tabs provide information about passed and failed Lighthouse audits, highlighting opportunities for improvement."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"performance",src:r(6331).Z,width:"2846",height:"1540"})))}d.isMDXComponent=!0},6480:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-asset-header-a522c8797a9f7a514084d54bbfd45d7d.png"},5856:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-asset-a5397980ab37e9cf53b81b56f397e12a.png"},3955:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-detail-d9e56a80494f1625ab5718bdc878b9ea.png"},4261:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-flamechart-b7b40740b664d6a97260b6240800bb96.png"},4723:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-long-task-hover-0-78c237b92fedefcff84ca693a90f4d0d.png"},258:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-long-task-bdc422ae42577e94f02f6cea1cb4b07a.png"},2258:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-metrics-4dec5309fb00636210a82dcf2271e8cb.png"},6331:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-performance-5ddc6bcdd0a6dd607573a4c46d2103bd.png"},1053:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-render-timeline-c1f60d1e911428e95a3793ec39247327.png"},7506:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/report-treemap-3bea1e7a1cb8e10330bf773d589eaa1a.png"}}]);